{"version":3,"file":"static/js/961.38de7654.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACiBM,IAFT,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,oBAAuCR,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBM,EAAc,mCAAG,WAAMD,GAAN,uFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKO,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IADvC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD,4ECzBjBQ,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,YAGd,C,0HCqDD,UA9DqB,WAAO,IAAD,YACjBX,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,IAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,UAGuBlB,EAAAA,EAAAA,IAAkBC,GAHzC,OAGUL,EAHV,OAIIoB,EAASpB,GAJb,gDAMI0B,QAAQC,IAAR,MANJ,yBAQIL,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadM,EACD,GAAE,CAACvB,MAEAc,EAAMU,OAAS,GAAnB,CAIA,IAAQC,EACNX,EADMW,MAAOC,EACbZ,EADaY,aAAcC,EAC3Bb,EAD2Ba,aAAcC,EACzCd,EADyCc,SAAUC,EACnDf,EADmDe,YAAaC,EAChEhB,EADgEgB,OAGlE,OACE,4BACE,SAAC,KAAD,CAASC,GAAE,oBAAEb,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAArC,qBACCjB,IAAa,SAAC,IAAD,KAEd,0BACE,gBACEkB,IAAG,0CAAqCL,GACxCM,IAAKV,OAGT,yBAAMA,KACN,yBAAMC,EAAaU,MAAM,EAAG,MAC5B,uCAAeT,EAAaU,QAAQ,GAApC,YACA,uCACA,yBAAMT,KACN,qCACA,yBAAME,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMzC,IAAV,IAAgB0C,KAAK,SAC3C,SAAC,KAAD,CAAST,GAAG,OAAOC,MAAK,UAAE,CAAEC,KAAI,UAAEf,EAASc,aAAX,aAAE,EAAgBC,aAA1B,QAAoC,IAA5D,mBAGA,mBACA,SAAC,KAAD,CAASF,GAAG,UAAUC,MAAK,UAAE,CAAEC,KAAI,UAAEf,EAASc,aAAX,aAAE,EAAgBC,aAA1B,QAAoC,IAA/D,sBAIA,SAAC,EAAAQ,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAhCL,CAoCF,C","sources":["api.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '2b7f816e736d5b5ccbfcea974c6e28fa';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async name => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${name}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#000000']}\n    />\n  );\n};\n","import { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from '../../api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setIsloading(true);\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsloading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (movie.length < 1) {\n    return;\n  }\n\n  const { title, release_date, vote_average, overview, poster_path, genres } =\n    movie;\n\n  return (\n    <div>\n      <NavLink to={location.state?.from ?? '/'}>Go back</NavLink>\n      {isLoading && <Loader />}\n\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n      </div>\n      <div>{title}</div>\n      <div>{release_date.slice(0, 4)}</div>\n      <div>Raiting: {vote_average.toFixed(1)} / 10</div>\n      <div>Overview</div>\n      <div>{overview}</div>\n      <div>Genres</div>\n      <div>{genres.map(genre => genre.name).join(', ')}</div>\n      <NavLink to=\"cast\" state={{ from: location.state?.from } ?? '/'}>\n        Cast\n      </NavLink>\n      <br />\n      <NavLink to=\"reviews\" state={{ from: location.state?.from } ?? '/'}>\n        Reviews\n      </NavLink>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","fetchTrendingMovies","response","data","results","fetchMoviesByName","name","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useParams","useState","movie","setMovie","isLoading","setIsloading","location","useLocation","useEffect","console","log","fetchMovie","length","title","release_date","vote_average","overview","poster_path","genres","to","state","from","src","alt","slice","toFixed","map","genre","join","Suspense","fallback"],"sourceRoot":""}