{"version":3,"file":"static/js/145.d870ba6c.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '2b7f816e736d5b5ccbfcea974c6e28fa';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async name => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${name}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#000000']}\n    />\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const { title, name, id, poster_path } = movie;\n\n  return (\n    <li>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title || name}\n        />\n        <p>{title || name}</p>\n      </NavLink>\n    </li>\n  );\n};\n","import { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n};\n","import { toast } from 'react-toastify';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (event.currentTarget.elements.query.value === '') {\n      toast('Enter a film name');\n      event.currentTarget.reset();\n      return;\n    }\n    onSubmit(event.currentTarget.elements.query.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={event => handleSubmit(event)}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { fetchMoviesByName } from '../../api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsloading] = useState(false);\n  const movie = searchParams.get('query') ?? '';\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (movie === '') {\n      return;\n    }\n\n    async function fetchMovie() {\n      try {\n        setIsloading(true);\n        const data = await fetchMoviesByName(movie);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsloading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [movie]);\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","KEY","fetchTrendingMovies","response","data","results","fetchMoviesByName","name","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MovieItem","movie","location","useLocation","title","id","poster_path","to","state","from","src","alt","MovieList","movies","map","SearchForm","onSubmit","handleSubmit","event","preventDefault","currentTarget","elements","query","value","toast","reset","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsloading","get","useEffect","console","log","fetchMovie"],"sourceRoot":""}