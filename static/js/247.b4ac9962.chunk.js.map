{"version":3,"file":"static/js/247.b4ac9962.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD/B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACiBM,IAFT,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,oBAAuCR,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBM,EAAc,mCAAG,WAAMD,GAAN,uFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKO,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IADvC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD,kHCuB9B,UA7Ca,WACX,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGuBP,EAAAA,EAAAA,IAAeD,GAHtC,OAGUL,EAHV,OAIIW,EAAQX,GAJZ,gDAMIe,QAAQC,IAAR,MANJ,yBAQIH,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadI,EACD,GAAE,CAACZ,MAEAE,EAAKW,OAAS,GAIlB,OACE,4BACE,kCACCN,IAAa,SAAC,IAAD,KACd,wBACGL,EAAKY,KAAI,gBAAGhB,EAAH,EAAGA,KAAMiB,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,2BACE,gBACEC,IAAG,0CAAqCF,GACxCG,IAAKrB,KAEP,uBAAIA,KACJ,uBAAIiB,MANGE,EADD,QAajB,C,4EC9CYG,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,YAGd,C","sources":["api.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '2b7f816e736d5b5ccbfcea974c6e28fa';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByName = async name => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${name}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast } from '../../api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieCastList() {\n      try {\n        setIsloading(true);\n        const data = await fetchMovieCast(movieId);\n        setCast(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsloading(false);\n      }\n    }\n\n    fetchMovieCastList();\n  }, [movieId]);\n\n  if (cast.length < 1) {\n    return;\n  }\n\n  return (\n    <div>\n      <div>Cast</div>\n      {isLoading && <Loader />}\n      <ul>\n        {cast.map(({ name, character, profile_path, id }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#000000']}\n    />\n  );\n};\n"],"names":["axios","KEY","fetchTrendingMovies","response","data","results","fetchMoviesByName","name","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","useParams","useState","setCast","isLoading","setIsloading","useEffect","console","log","fetchMovieCastList","length","map","character","profile_path","id","src","alt","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}